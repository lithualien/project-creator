{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/project/project-modal-create/project-modal-create.component.ts","./src/app/components/project/project-modal-create/project-modal-create.component.html","./src/app/services/student/student.service.ts","./src/app/components/project/project.component.ts","./src/app/components/project/project.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/enums/ApiPath.ts","./src/app/app.module.ts","./src/app/components/project/project-card/project-card.component.ts","./src/app/components/project/project-card/project-card.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/project/single-project/single-project.component.ts","./src/app/components/project/single-project/single-project.component.html","./src/app/components/group/group.component.ts","./src/app/components/group/group.component.html","./src/app/components/student/student.component.ts","./src/app/components/student/student.component.html","./src/app/app-routing.module.ts","./src/app/services/project/project.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:5000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { EventEmitter } from '@angular/core';\nimport { Project } from 'src/app/models/project.model';\n\n@Component({\n  selector: 'app-project-modal-create',\n  templateUrl: './project-modal-create.component.html',\n  styleUrls: ['./project-modal-create.component.css']\n})\nexport class ProjectModalCreateComponent implements OnInit {\n\n  @Input('creatingInProgress') \n  public creatingInProgress!: boolean;\n\n  @Input('created') \n  public created: boolean = false;\n\n  @Input('errorMessage') \n  public errorMessage: string = '';\n\n  @Input('project') \n  public project!: Project;\n\n  @Input('newProject') \n  public newProject!: Project;\n\n  @Input('save') \n  public save: boolean = false;\n\n  @Input('delete')\n  public delete: boolean = false;\n\n  @Input('deleteInProgress')\n  public deleteInProgress: boolean = false;\n\n  @Input('deleteSuccessful')\n  public deleteSuccessful: boolean = false;\n  \n  @Output('submittedProject') \n  public submittedProject: EventEmitter<Project> = new EventEmitter();\n\n  private form!: FormGroup;\n  \n\n  constructor(\n    public activeModal: NgbActiveModal,\n  ) { }\n\n  ngOnInit(): void {\n    this.setForm();\n  }\n\n  public setForm(): void {\n    this.form = new FormGroup({\n        'id': new FormControl(this.project.id),\n        'projectName': new FormControl(this.project.projectName, [ Validators.required, Validators.maxLength(26), Validators.minLength(4) ]),\n        'groupAmount': new FormControl(this.project.groupAmount, [ Validators.required, Validators.min(1), Validators.max(20) ]),\n        'studentsPerGroup': new FormControl(this.project.studentsPerGroup, [Validators.required, Validators.min(2), Validators.max(10) ])\n    });\n  }\n\n  public getForm(): FormGroup {\n    return this.form;\n  }\n\n  public submitForm() {\n    let project: Project = this.getForm().value;\n    this.submittedProject.emit(project);\n  }\n\n  public close() {\n    this.activeModal.close();\n  }\n\n  public getProjectNameMessage(): string {\n    let control: any = this.getForm().get('projectName');\n\n    if(!control?.touched) {\n      return '';\n    }\n\n    if(control?.hasError('required')) {\n      return 'Project name field is required!';\n    }\n\n    if(control?.hasError('minlength')) {\n      return 'Project name is a bit too short, it should cointain at least 4 symbols!'\n    }\n\n    if(control?.hasError('maxlength')) {\n      return 'Project name is a bit too long, it should contain no more than 26 symbols!'\n    }\n\n    return '';\n  }\n\n  public getMessageForGroupAmount(): string {\n    let control: any = this.getForm().get('groupAmount');\n\n    if(!control?.touched) {\n      return '';\n    }\n\n    if(control?.hasError('required')) {\n      return \"Group amount field is required!\"\n    }\n\n    if(control?.hasError('max')) {\n      return \"Group amount can not be higher than 20!\";\n    }\n\n    if(control?.hasError('min')) {\n      return 'Group amount can not be lower than 1!';\n    }\n\n    return '';\n\n  }\n\n  public getMessageForStudentAmount(): string {\n    let control: any = this.getForm().get('studentsPerGroup');\n\n    if(!control?.touched) {\n      return '';\n    }\n\n    if(control?.hasError('required')) {\n      return \"Student per group field is required!\"\n    }\n\n    if(control?.hasError('max')) {\n      return \"Student per group amount can not be higher than 10!\";\n    }\n\n    if(control?.hasError('min')) {\n      return 'Student per group amount can not be lower than 2!';\n    }\n\n    return '';\n\n  }\n\n}\n","<div class=\"modal-header\">  \n    <h4 *ngIf=\"save && !delete\" class=\"modal-title\">Project Creation Form</h4>\n    <h4 *ngIf=\"!save && !delete\" class=\"modal-title\"> Project Update Form</h4>\n    <h4 *ngIf=\"delete\" class=\"modal-title\"> Delete Confirmation</h4>\n    <button *ngIf=\"!creatingInProgress && !deleteInProgress\" type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"close()\">x</button>\n</div>\n<form [formGroup]=\"getForm()\" (ngSubmit)=\"submitForm()\">\n    <div class=\"modal-body\">\n        <div class=\"container\" *ngIf=\"!creatingInProgress && !created && !delete\">\n            <!-- Error messages -->\n\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!save\">\n                Important!!! Changing student amount will remove all students from the project!!!\n            </div>\n\n\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage !== ''\">\n                {{ errorMessage }}\n            </div>\n\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"getProjectNameMessage() !== ''\">\n                {{ getProjectNameMessage() }}\n            </div>\n\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"getMessageForGroupAmount() !== ''\">\n                {{ getMessageForGroupAmount() }}\n            </div>\n\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"getMessageForStudentAmount() !== ''\">\n                {{ getMessageForStudentAmount() }}\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"projectName\">Project Name</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"projectName\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"groupAmount\">Amount of Groups</label>\n                <input type=\"number\" min=\"1\" max=\"20\" class=\"form-control\" formControlName=\"groupAmount\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"studentsPerGroup\">Students per Group</label>\n                <input type=\"number\" min=\"2\" max=\"10\" class=\"form-control\" formControlName=\"studentsPerGroup\">\n            </div>\n        </div>\n\n        <div class=\"container\" *ngIf=\"!creatingInProgress && !created && !deleteInProgress && !deleteSuccessful && delete\">\n            <div class=\"alert alert-danger\" role=\"alert\">\n                Please confirm delete action!\n            </div>\n            <p>The data will be lost for ever!</p>\n        </div>\n\n        <!-- Loading circle -->\n        <div *ngIf=\"creatingInProgress || deleteInProgress\" class=\"text-center pt-3\">\n            <div class=\"spinner-border\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n            </div>\n            <span class=\"fi-circle-check\"></span>\n            <p class=\"pt-2\" *ngIf=\"save && !delete\">Thank you for creating a project! Currently the system is working really hard to create your wonderful project! It might take a moment or two, but we will make sure to inform you as soon as project is created!</p>\n            <p class=\"pt-2\" *ngIf=\"!save && !delete\">Our system is calculating and refactoring the project by your desicred settings! It will not take long, stay tight!</p>\n            <p class=\"pt-2\" *ngIf=\"delete\">The system is gathering all the data and deleting it... For ever...</p>        \n        </div>\n\n        <div *ngIf=\"created && save && !delete\">\n            <div class=\"alert alert-success text-center\" role=\"alert\">\n                Project was successfully created!\n            </div>\n            <p>Your wonderful project has been created! You can visit the project page by clicking here!</p>\n        </div>\n\n        <div *ngIf=\"created && !save && !delete\">\n            <div class=\"alert alert-success text-center\" role=\"alert\">\n                Project was successfully updated!\n            </div>\n            <p>Your outstanding project has been update! You can visit the project page by clicking here!</p>\n        </div>\n\n        <div *ngIf=\"deleteSuccessful && delete && !deleteInProgress\">\n            <div class=\"alert alert-success text-center\" role=\"alert\">\n                Project was successfully deleted!\n            </div>\n            <p>As much as we do not like to see it, but your project has been successfully deleted...</p>\n        </div>\n\n    </div>\n    <div class=\"modal-footer\">\n        <button *ngIf=\"!creatingInProgress && !created && delete && !deleteInProgress && !deleteSuccessful\" class=\"btn btn-success\">Delete Project</button>\n        <button *ngIf=\"!creatingInProgress && !created && save && !delete\" class=\"btn btn-success\" [disabled]=\"!getForm().valid\">Submit Project</button>\n        <button *ngIf=\"!creatingInProgress && !created && !save && !delete\" class=\"btn btn-success\" [disabled]=\"!getForm().valid\">Update Project</button>\n        <button class=\"btn btn-primary\" *ngIf=\"!creatingInProgress && !deleteInProgress\" type=\"button\" (click)=\"close()\">Close</button>\n    </div>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { ApiPath } from 'src/app/enums/ApiPath';\nimport { Observable } from 'rxjs';\nimport { Student } from 'src/app/models/student.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  private baseUrl: string = environment.baseUrl;\n\n  constructor(private http: HttpClient) { }\n\n  public getStudentArray(): Observable<Array<Student>> {\n    let url: string = `${this.baseUrl}${ApiPath.Student}`;\n    return this.http.get<Array<Student>>(url);\n  }\n\n  public postStudent(student: Student): Observable<Student> { \n    let url: string = `${this.baseUrl}${ApiPath.Student}`;\n    return this.http.post<Student>(url, student);\n  }\n\n  public deleteStudent(id: number): Observable<any> {\n    let url: string = `${this.baseUrl}${ApiPath.Student}/${id}`;\n    return this.http.delete<any>(url);\n  }\n\n  public postStudentGroup(studentId: number, groupId: number): Observable<any> {\n    let url: string = `${this.baseUrl}${ApiPath.Student}/${studentId}/groups/${groupId}`;\n    return this.http.post<any>(url, null);\n  }\n\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, ComponentFactoryResolver, EventEmitter, OnInit } from '@angular/core';\nimport { NgbModal, NgbModalConfig, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModalStack } from '@ng-bootstrap/ng-bootstrap/modal/modal-stack';\nimport { ApiError } from 'src/app/models/error.model';\nimport { Project } from 'src/app/models/project.model';\nimport { ProjectService } from 'src/app/services/project/project.service';\nimport { ProjectModalCreateComponent } from './project-modal-create/project-modal-create.component';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit {\n\n  private loading: boolean = false;\n  private creatingInProgress: boolean = false;\n  private created: boolean = false;\n  private save: boolean = true;\n  private projectArray: Array<Project> = [];\n\n\n  constructor(\n    private projectService: ProjectService,\n    private ngbModal: NgbModal\n  ) { }\n\n  ngOnInit(): void {\n    this.getProjects();\n  }\n\n  public getProjects() {\n    this.setLoading(true);\n    this.projectService\n      .getProjects()\n      .subscribe(result => {\n        this.setLoading(false);\n        this.projectArray = result;\n      }, error => {\n        this.setLoading(false);\n      })\n  }\n\n  public getLoading(): boolean {\n    return this.loading;\n  }\n\n  public setLoading(status: boolean): void {\n    this.loading = status;\n  }\n\n  public getCreatingInProgress(): boolean {\n    return this.creatingInProgress;\n  }\n\n  public setCreatingInProgress(value: boolean) {\n    this.creatingInProgress = value;\n  }\n\n  public getCreated(): boolean {\n    return this.created;\n  }\n\n  public setCreated(value: boolean) {\n    this.created = value;\n  }\n\n  public getProjectArray(): Array<Project> {\n    return this.projectArray;\n  }\n\n  public isProjectArrayEmpty(): boolean {\n    return this.projectArray.length < 1;\n  }\n\n  public openCreateModal(): void {\n    const modalRef: NgbModalRef = this.createModal();\n    let defaultProject: Project = { id: 0, projectName: '', groupAmount: 1, studentsPerGroup: 2 }\n    this.save = true;\n    this.intialialModalRefConfiguration(modalRef, defaultProject);\n\n    modalRef.componentInstance.submittedProject.subscribe((result: Project) => {\n\n      if (result !== undefined) {\n        this.setCreatingInProgress(true);\n        modalRef.componentInstance.creatingInProgress = this.getCreatingInProgress();\n\n        this.projectService.postProject(result).subscribe((newProject: Project) => {\n          this.setOnGoodResult(modalRef, newProject);\n          this.getProjectArray().push(newProject);\n        },\n          ((apiError: HttpErrorResponse) => {\n            this.handleApiError(modalRef, apiError);\n          }));\n      }\n    });\n\n    modalRef.closed.subscribe(() => {\n      this.resetModaRef(modalRef);\n    })\n\n  }\n\n  public handleUpdateClick(index: number): void {\n    const modalRef: NgbModalRef = this.createModal();\n    let project: Project = this.projectArray[index];\n    this.save = false;\n    this.intialialModalRefConfiguration(modalRef, project);\n\n    modalRef.componentInstance.submittedProject.subscribe((result: Project) => {\n\n      if (result !== undefined) {\n        this.setCreatingInProgress(true);\n        modalRef.componentInstance.creatingInProgress = this.getCreatingInProgress();\n\n        this.projectService.putProject(result, project.id).subscribe((newProject: Project) => {\n          this.setOnGoodResult(modalRef, newProject);\n          this.projectArray[index] = newProject;\n        },\n          ((apiError: HttpErrorResponse) => {\n            this.handleApiError(modalRef, apiError);\n          }));\n      }\n    });\n\n    modalRef.closed.subscribe(() => {\n      this.resetModaRef(modalRef);\n    })\n\n  }\n\n  public handleDeleteClick(index: number): void {  \n    const modalRef: NgbModalRef = this.createModal();\n    let project: Project = this.projectArray[index];\n    this.initializeForDelete(modalRef, project);\n\n    modalRef.componentInstance.submittedProject.subscribe((result: Project) => {\n      if(result !== undefined) {\n        modalRef.componentInstance.deleteInProgress = true;\n        this.projectService.deleteProject(result.id).subscribe(() => {\n          this.projectArray.splice(index, 1);\n          modalRef.componentInstance.deleteInProgress = false;\n          modalRef.componentInstance.deleteSuccessful = true;\n        },\n        ((apiError: HttpErrorResponse) => {\n          modalRef.componentInstance.deleteSuccessful = false;\n        }));\n      }\n    });\n\n    modalRef.closed.subscribe(() => {\n      this.resetModaRef(modalRef);\n    })\n\n  }\n\n  private createModal(): NgbModalRef {\n    return this.ngbModal.open(ProjectModalCreateComponent, { centered: true, size: 'lg' });\n  }\n\n  private resetModaRef(modalRef: NgbModalRef): void {\n    this.setCreated(false);\n    this.setCreatingInProgress(false);\n\n    modalRef.componentInstance.creatingInProgress = this.getCreatingInProgress();\n    modalRef.componentInstance.created = this.getCreated();\n    modalRef.componentInstance.newProject = null;\n    modalRef.componentInstance.errorMessage = '';\n    modalRef.componentInstance.delete = false;\n    modalRef.componentInstance.deleteInProgress = false;\n    modalRef.componentInstance.deleteSuccessful = false;\n  }\n\n  private setOnGoodResult(modalRef: NgbModalRef, newProject: Project): void {\n    this.setCreatingInProgress(false);\n    this.setCreated(true);\n\n    modalRef.componentInstance.creatingInProgress = this.getCreatingInProgress();\n    modalRef.componentInstance.created = this.getCreated();\n    modalRef.componentInstance.newProject = newProject;\n  }\n\n  private handleApiError(modalRef: NgbModalRef, apiError: HttpErrorResponse): void {\n    this.setCreatingInProgress(false);\n    modalRef.componentInstance.creatingInProgress = this.getCreatingInProgress();\n    if (apiError.error.status === 400) {\n      modalRef.componentInstance.errorMessage = apiError.error.message;\n    } else {\n      modalRef.componentInstance.errorMessage = \"Unexpected error occured.\";\n    }\n  }\n\n  private intialialModalRefConfiguration(modalRef: NgbModalRef, project: Project): void {\n    modalRef.componentInstance.creatingInProgress = this.getCreatingInProgress();\n    modalRef.componentInstance.project = project;\n    modalRef.componentInstance.created = this.getCreated();\n    modalRef.componentInstance.save = this.save;\n  }\n\n  private initializeForDelete(modalRef: NgbModalRef, project: Project): void {\n    modalRef.componentInstance.creatingInProgress = false;\n    modalRef.componentInstance.created = false;\n    modalRef.componentInstance.errorMessage = '';\n    modalRef.componentInstance.project = project;\n    modalRef.componentInstance.newProject = null;\n    modalRef.componentInstance.save = false;\n    modalRef.componentInstance.delete = true;\n  }\n\n}\n","<div class=\"col-12 col-sm-12 col-md-12 col-lg-12 p-0\">\n\n    <!-- Loading circle -->\n    <div *ngIf=\"getLoading()\" class=\"text-center pt-3\">\n        <div class=\"spinner-border\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n        </div>\n    </div>\n\n    <!-- If content is fetched from db -->\n    <div *ngIf=\"!getLoading()\">\n        <!-- Load if there is at least one project -->\n        <div *ngIf=\"!isProjectArrayEmpty()\">\n            <div class=\"text-center pt-3 pb-3\">\n                <h3>Did not find desired project?</h3>\n                <p>Do not hesitate, click below and add a new one!</p>\n                <button class=\"btn btn-blue\" (click)=\"openCreateModal()\">Create a project</button>\n            </div>\n\n            <h3 class=\"text-center\">List of our awesome projects:</h3>\n            <div class=\"row\">\n                <div class=\"col-4 col-sm-4 col-md-4 col-lg-4 pr-2 pb-2\" *ngFor=\"let project of getProjectArray(); let i = index\">\n                    <app-project-card (updateIndex)=\"handleUpdateClick($event)\" (deleteIndex)=\"handleDeleteClick($event)\" [project]=\"project\" [index]=\"i\"></app-project-card>\n                </div>\n            </div>\n        </div>\n\n        <!-- Load if there are no projects avible -->\n        <div *ngIf=\"isProjectArrayEmpty()\">\n            <div class=\"text-center pt-3 pb-3\">\n                <h3>Sadly there are no projects created</h3>\n                <p>But you could be the first one!</p>\n                <button class=\"btn btn-blue\" (click)=\"openCreateModal()\">Create a project</button>\n            </div>\n        </div>\n\n    </div>\n\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'front-end';\n\n  constructor() {\n\n  }\n\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>","export enum ApiPath {\n  Project = \"/projects/v1\",\n  Student = \"/students/v1\",\n  GroupName = \"/group/names/v1\"\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProjectComponent } from './components/project/project.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ProjectCardComponent } from './components/project/project-card/project-card.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ProjectModalCreateComponent } from './components/project/project-modal-create/project-modal-create.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SingleProjectComponent } from './components/project/single-project/single-project.component';\nimport { GroupComponent } from './components/group/group.component';\nimport { StudentComponent } from './components/student/student.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProjectComponent,\n    NavbarComponent,\n    ProjectCardComponent,\n    ProjectModalCreateComponent,\n    SingleProjectComponent,\n    GroupComponent,\n    StudentComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Project } from 'src/app/models/project.model';\n\n@Component({\n  selector: 'app-project-card',\n  templateUrl: './project-card.component.html',\n  styleUrls: ['./project-card.component.css']\n})\nexport class ProjectCardComponent implements OnInit {\n\n  @Input('project')\n  public project!: Project;\n\n  @Input('index')\n  public index!: number;\n\n  @Output('updateIndex')\n  public updateIndex: EventEmitter<number> = new EventEmitter();\n\n  @Output('deleteIndex')\n  public deleteIndex: EventEmitter<number> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public onClickUpdate(index: number): void {\n    this.updateIndex.emit(index);\n  }\n\n  public onClickDelete(index: number): void {\n    this.deleteIndex.emit(index);\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <a [routerLink] = \"['/projects', project.id]\">{{ project.projectName }}</a>\n      </div>\n    <div class=\"card-body\">\n        <p class=\"card-text\">Groups in the project: {{ project.groupAmount }}</p>\n        <p class=\"card-text\">Students per group: {{ project.studentsPerGroup }}</p>\n        <button class=\"btn btn-light-blue card-link\" (click)=\"onClickUpdate(index)\">Update</button>\n        <button class=\"btn btn-danger card-link\" (click)=\"onClickDelete(index)\">Delete</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid navbar-blue\">\n    <div class=\"row\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 p-0\">\n                    <nav class=\"navbar navbar-expand-md\">\n                        <span class=\"navbar-text\">&nbsp;</span>\n\n                        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                            data-target=\"#collapsibleNavbar\">\n                            <span class=\"navbar-toggler-icon\"></span>\n                        </button>\n\n                        <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n                            <ul class=\"navbar-nav\">\n                                <li class=\"nav-item\">\n                                    <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\"\n                                        [routerLinkActiveOptions]=\"{ exact: true }\">Projects</a>\n                                </li>\n                                <li class=\"nav-item\">\n                                    <a class=\"nav-link\" routerLink=\"/students\" routerLinkActive=\"active\"\n                                        [routerLinkActiveOptions]=\"{ exact: true }\">Students</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, RouterLink } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Group } from 'src/app/models/group.model';\nimport { Student } from 'src/app/models/student.model';\nimport { ProjectService } from 'src/app/services/project/project.service';\nimport { StudentService } from 'src/app/services/student/student.service';\nimport { ProjectGroup } from '../../../models/project-group.model';\n\n@Component({\n  selector: 'app-single-project',\n  templateUrl: './single-project.component.html',\n  styleUrls: ['./single-project.component.css']\n})\nexport class SingleProjectComponent implements OnInit {\n\n  private projectId!: number;\n  private projectWithGroup!: ProjectGroup;\n  private studentArray: Array<Student> = new Array();\n  private loadingGroups: boolean = false;\n  private loadingStudents: boolean = false;\n  private uploadInProgress: boolean = false;\n  private uploadFinished: boolean = false;\n  private form!: FormGroup;\n  public groupName: string = '';\n  public student: string = '';\n  public errMessage: string = '';\n\n  constructor(\n    private route: ActivatedRoute, \n    private service: ProjectService,\n    private studentService: StudentService,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.params['id'];\n    this.initializeGroups();\n    this.initializestudents();\n    this.setFormGroup();\n  }\n\n  private initializeGroups() {\n    this.loadingGroups = true;\n    this.service.getProjectWithGroup(this.projectId)\n      .subscribe((result: ProjectGroup) => {\n        this.projectWithGroup = result;\n        this.loadingGroups = false;\n    });\n  }\n\n  private initializestudents() {\n    this.loadingStudents = true;\n    this.studentService.getStudentArray().subscribe((result: Array<Student>) => {\n        this.studentArray = result;\n        this.loadingStudents = false;\n    })\n  }\n\n  public getLoadingGroups(): boolean {\n    return this.loadingGroups;\n  }\n\n  public getProjectWithGroup(): ProjectGroup {\n    return this.projectWithGroup;\n  }\n\n  public getGroupArray(): Array<Group> {\n    return this.projectWithGroup.groups;\n  }\n\n  public getStudentArray(): Array<Student> {\n    return this.studentArray;\n  }\n\n  public getLoadingStudents(): boolean {\n    return this.loadingStudents;\n  }\n\n  public getStudentsPerGroup(): number {\n    return this.projectWithGroup.studentsPerGroup;\n  }\n\n  public getFormGroup(): FormGroup {\n    return this.form;\n  }\n\n  public getUploadInProgress() {\n    return this.uploadInProgress;\n  }\n\n  public getUploadFinished() {\n    return this.uploadFinished;\n  }\n\n  public getErrorMessage() {\n    return this.errMessage;\n  }\n\n  public setFormGroup() {\n    this.form = new FormGroup({\n      'groupName': new FormControl('', Validators.required),\n      'student': new FormControl('', Validators.required)\n    });\n  }\n\n  public submitForm(): void {\n    let groupname: Group = this.form.value['groupName'];\n    let student: Student = this.form.value['student'];\n\n    this.uploadInProgress = true;\n    this.errMessage = '';\n\n    this.studentService.postStudentGroup(student.id, groupname.id).subscribe(() => {\n      this.uploadInProgress = false;\n      this.uploadFinished = true;\n      let index: number = this.getGroupArray().indexOf(groupname);\n      this.getGroupArray()[index].students.push(student);\n      this.setFormGroup();\n    }, (error: HttpErrorResponse) => {\n      this.uploadFinished = false;\n      this.uploadInProgress = false;\n      this.setFormGroup();\n\n        if(error.error.status === 400) {\n            this.errMessage = error.error.message;\n        }\n    });\n\n  }\n\n  public loadGroupManagement(content: any) {\n    this.modalService.open(content, { centered: true, size: 'lg', keyboard: false });\n  }\n\n}\n","<ng-template #managegroup let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Create Student</h4>\n        <button *ngIf=\"!getUploadInProgress()\" type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <form [formGroup]=\"getFormGroup()\" (ngSubmit)=\"submitForm()\">\n        <div class=\"modal-body\">\n            <div class=\"container\" *ngIf=\"!getUploadInProgress()\">\n\n                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"getErrorMessage() !== ''\">\n                    {{ getErrorMessage() }}\n                </div>\n\n                <div *ngIf=\"getUploadFinished()\">\n                    <div class=\"alert alert-success\" role=\"alert\">\n                        Successfully uploaded student to the database!\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <select class=\"form-control\" formControlName=\"groupName\">\n                        <option *ngFor=\"let group of getGroupArray()\" [ngValue]=\"group\">{{ group.groupName }}</option>\n                    </select>\n                </div>\n                <div class=\"form-group\">\n                    <select class=\"form-control\" formControlName=\"student\">\n                        <option *ngFor=\"let student of getStudentArray()\" [ngValue]=\"student\">{{ student.firstName + \" \"\n                            + student.lastName }}</option>\n                    </select>\n                </div>\n            </div>\n            <div *ngIf=\"getUploadInProgress()\">\n                <div class=\"spinner-border\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                </div>\n                <span class=\"fi-circle-check\"></span>\n                <p class=\"pt-2\">Adding new talent to the database!</p>\n            </div>\n        </div>\n\n        <div class=\"modal-footer\">\n            <button *ngIf=\"!getUploadInProgress()\" class=\"btn btn-blue\" [disabled]=\"!getFormGroup().valid\">Submit\n                Group</button>\n            <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close()\">Close</button>\n        </div>\n    </form>\n</ng-template>\n\n<!-- Loading circle -->\n<div *ngIf=\"getLoadingGroups() && getLoadingStudents()\" class=\"text-center pt-3\">\n    <div class=\"spinner-border\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n    </div>\n</div>\n\n<div *ngIf=\"!getLoadingGroups() && !getLoadingStudents()\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 pt-2\">\n                <div class=\"text-center\">\n                    <h1 class=\"text-center\">{{ \"Project (\" + getProjectWithGroup().projectName + \")\" }}</h1>\n                    <p>Manage the group structure</p>\n                    <button type=\"button\" class=\"btn btn-blue\" aria-label=\"manage\"\n                        (click)=\"loadGroupManagement(managegroup)\">Manage groups</button>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-4 col-sm-4 col-md-4 col-lg-4 col-xl-4 pt-2\" *ngFor=\"let group of getGroupArray()\">\n                        <app-group [group]=\"group\"></app-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Group } from 'src/app/models/group.model';\nimport { Student } from 'src/app/models/student.model';\n\n@Component({\n  selector: 'app-group',\n  templateUrl: './group.component.html',\n  styleUrls: ['./group.component.css']\n})\nexport class GroupComponent implements OnInit {\n\n  @Input('group')\n  public group!: Group;\n\n  constructor() {  }\n\n  ngOnInit(): void {\n  }\n\n  public getStudentArray(): Array<Student> {\n    return this.group.students;\n  }\n\n  public isStudentListEmpty(): boolean {\n    return this.getStudentArray().length < 1;\n  }\n\n  public onDelete(student: Student) {\n    console.log(student);\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        {{ group.groupName }}\n    </div>\n    <div class=\"card-body\">\n        <div *ngIf=\"isStudentListEmpty()\">\n            <p>No students in the group</p>\n        </div>\n        <div *ngIf=\"!isStudentListEmpty()\">\n            <table class=\"table\">\n                <tbody>\n                    <tr *ngFor=\"let student of getStudentArray(); let i = index\">\n                        <th width=\"40%\" scrop=\"row\">{{ student.firstName }}</th>\n                        <th width=\"40%\"> {{ student.lastName }} </th>\n                        <th width=\"10%\"><button type=\"button\" class=\"delete\" aria-label=\"delete\" (click)=\"onDelete(student)\">x</button></th>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { StudentService } from 'src/app/services/student/student.service';\nimport { Student } from 'src/app/models/student.model';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent implements OnInit {\n\n  private studentArray!: Array<Student>;\n  private index!: number;\n  private loading: boolean = false;\n  private deleteInProgress: boolean = false;\n  private deleteFinished: boolean = false;\n  private uploadInProgress: boolean = false;\n  private uploadFinished: boolean = false;\n  private form!: FormGroup;\n  private errorMessage: string = '';\n\n  constructor(\n    private studentService: StudentService,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.initStudentArray();\n    this.setFormGroup();\n  }\n\n  public initStudentArray(): void {\n    this.studentService.getStudentArray().subscribe((student) => {\n      this.loading = false;\n      this.studentArray = student;\n    }, (error: Error) => {\n      this.loading = false;\n    })\n  }\n\n  public getLoading(): boolean {\n    return this.loading;\n  }\n\n  public getStudentArray(): Array<Student> {\n    return this.studentArray;\n  }\n\n  public getDeleteInProgress(): boolean {\n    return this.deleteInProgress;\n  }\n\n  public getDeleteFinished(): boolean {\n    return this.deleteFinished;\n  }\n\n  public getUploadInProgress(): boolean {\n    return this.uploadInProgress;\n  }\n\n  public getUploadFinished(): boolean {\n    return this.uploadFinished;\n  }\n\n  public getFormGroup(): FormGroup {\n    return this.form;\n  }\n\n  public getErrorMessage(): string {\n    return this.errorMessage;\n  }\n\n  public setFormGroup(): void {\n    this.form = new FormGroup({\n      'id': new FormControl(0),\n      'firstName': new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(250)]),\n      'lastName': new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(250)])\n\n    });\n  }\n\n  public isEmpty(): boolean {\n    return this.studentArray.length < 1\n  }\n\n  public deleteElement(): void {\n    let id: number = this.studentArray[this.index].id;\n    this.deleteInProgress = true;\n    this.studentService.deleteStudent(id).subscribe(() => {\n      this.deleteInProgress = false;\n      this.deleteFinished = true;\n      this.studentArray.splice(this.index, 1);\n    }, (error)=> {\n      this.deleteInProgress = false;\n      this.deleteFinished = false;\n    })\n  }\n\n  public confirm(content: any, index: number) {\n    this.modalService.open(content, { centered: true, size: 'lg', keyboard: false });\n    this.index = index;\n    this.deleteFinished = false;\n    this.deleteInProgress = false;\n  }\n\n  public submitForm() {\n    let student: Student = this.form.value;\n    this.errorMessage = '';\n    this.uploadInProgress = true;\n    this.studentService.postStudent(student).subscribe((result) => {\n      this.uploadInProgress = false;\n      this.uploadFinished = true;\n      this.setFormGroup();\n      this.studentArray.push(result);\n    }, (error: HttpErrorResponse) => {\n      this.uploadFinished = false;\n      this.uploadInProgress = false;\n      if(error.error.status === 400) {\n        this.errorMessage = error.error.message;\n      }\n    });\n  }\n\n  public getFormErrorMessage(beggining: string, field: string): string {\n    let control: any = this.form.get(field);\n\n    if(!control?.touched) {\n      return '';\n    }\n\n    if(control?.hasError('required')) {\n      return beggining + \" field is required!\"\n    }\n\n    if(control?.hasError('minlength')) {\n      return beggining + \" is a bit too short, it should contain at least 4 symbols!\";\n    }\n\n    if(control?.hasError('maxlength')) {\n      return beggining + ' is a bit too long, it should contain no more than 250 symbols!';\n    }\n\n    return '';\n\n  }\n\n  public newStudent(content: any) {\n    this.modalService.open(content, { centered: true, size: 'lg', keyboard: false });\n    this.errorMessage = '';\n    this.uploadFinished = false;\n    this.uploadInProgress = false;\n  }\n\n}\n","<!-- perkelti į atskirą komponentą visą modal ir pažiūrėti ar gali būti pernaudotas -->\n<ng-template #studentdeletemodal let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Confirm Delete</h4>\n        <button *ngIf=\"!getDeleteInProgress()\" type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n\n        <div *ngIf=\"!getDeleteInProgress() && !getDeleteFinished()\">\n            <div class=\"alert alert-danger\" role=\"alert\">\n                Removing student is irrevertible!\n            </div>\n            <p>Please confirm delete action by clicking the button below.</p>\n        </div>\n\n        <div *ngIf=\"getDeleteInProgress()\">\n            <div class=\"spinner-border\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n            </div>\n            <span class=\"fi-circle-check\"></span>\n            <p class=\"pt-2\">We are currently deleting a student from the list...</p>\n        </div>\n\n        <div *ngIf=\"getDeleteFinished()\">\n            <div class=\"aler aler-success\" role=\"alert\">\n                Successfully removed the student!\n            </div>\n            <p></p>\n        </div>\n\n    </div>\n    <div class=\"modal-footer\">\n        <button *ngIf=\"!getDeleteInProgress() && !getDeleteFinished()\" type=\"button\" class=\"btn btn-danger\"\n            (click)=\"deleteElement()\">Delete Student</button>\n        <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close()\">Close</button>\n    </div>\n</ng-template>\n\n<ng-template #studentaddmodal let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Create Student</h4>\n        <button *ngIf=\"!getUploadInProgress()\" type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <form [formGroup]=\"getFormGroup()\" (ngSubmit)=\"submitForm()\">\n        <div class=\"modal-body\">\n\n            <div *ngIf=\"!getUploadInProgress()\">\n\n                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"getErrorMessage() !== ''\">\n                    {{ getErrorMessage() }}\n                </div>\n\n                <div *ngIf=\"getUploadFinished()\">\n                    <div class=\"alert alert-success\" role=\"alert\">\n                        Successfully uploaded student to the database!\n                    </div>\n                </div>\n\n                <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"getFormErrorMessage('First name', 'firstName') !== ''\">\n                    {{ getFormErrorMessage('First name', 'firstName') }}\n                </div>\n\n                <div class=\"alert alert-danger\" role=\"alert\"\n                    *ngIf=\"getFormErrorMessage('Last name', 'lastName') !== ''\">\n                    {{ getFormErrorMessage('Last name', 'lastName') }}\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"firstName\">First name</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"firstName\" />\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"lastName\">Last name</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"lastName\" />\n                </div>\n            </div>\n\n            <div *ngIf=\"getUploadInProgress()\">\n                <div class=\"spinner-border\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                </div>\n                <span class=\"fi-circle-check\"></span>\n                <p class=\"pt-2\">Adding new talent to the database!</p>\n            </div>\n        </div>\n        <div class=\"modal-footer\">\n            <button *ngIf=\"!getUploadInProgress()\" class=\"btn btn-blue\"\n                [disabled]=\"!getFormGroup().valid\">Submit Student</button>\n            <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close()\">Close</button>\n        </div>\n    </form>\n</ng-template>\n\n<!-- Loading circle -->\n<div *ngIf=\"getLoading()\" class=\"text-center pt-3\">\n    <div class=\"spinner-border\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n    </div>\n</div>\n\n<div *ngIf=\"!getLoading()\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 pt-2\">\n                <div *ngIf=\"isEmpty()\" class=\"text-center\">\n                    <h1>Sorry</h1>\n                    <p>But the list is empty!</p>\n                    <button type=\"button\" class=\"btn btn-blue text-center\" aria-label=\"add\"\n                        (click)=\"newStudent(studentaddmodal)\">Add new student</button>\n                </div>\n                <div *ngIf=\"!isEmpty()\">\n                    <div class=\"text-center pb-2\">\n                        <h1>Did not find the student?</h1>\n                        <p>Add a new student by clicking button below!</p>\n                        <button type=\"button\" class=\"btn btn-blue\" aria-label=\"add\"\n                            (click)=\"newStudent(studentaddmodal)\">Add new student</button>\n                    </div>\n\n                    <table class=\"table pb-2\">\n                        <tbody>\n                            <tr *ngFor=\"let student of getStudentArray(); let i = index\">\n                                <th width=\"45%\" scrop=\"row\">{{ student.firstName }}</th>\n                                <th width=\"45%\"> {{ student.lastName }} </th>\n                                <th width=\"10%\"><button type=\"button\" class=\"delete\" aria-label=\"delete\"\n                                        (click)=\"confirm(studentdeletemodal, i)\">x</button></th>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectComponent } from './components/project/project.component';\nimport { SingleProjectComponent } from './components/project/single-project/single-project.component';\nimport { StudentComponent } from './components/student/student.component';\n\nconst routes: Routes = [\n  { path: '', component: ProjectComponent },\n  { path: 'projects/:id', component: SingleProjectComponent },\n  { path: 'students', component: StudentComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ApiPath } from 'src/app/enums/ApiPath';\nimport { ProjectGroup } from 'src/app/models/project-group.model';\nimport { Project } from 'src/app/models/project.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n\n  private baseUrl: string = environment.baseUrl;\n\n  constructor(private http: HttpClient) { }\n\n  public getProjects(): Observable<Array<Project>> {\n    let url: string = `${this.baseUrl}${ApiPath.Project}`;\n    return this.http.get<Array<Project>>(url);\n  }\n\n  public getProjectWithGroup(id: number): Observable<ProjectGroup> {\n    let url: string = `${this.baseUrl}${ApiPath.Project}/${id}`;\n    return this.http.get<ProjectGroup>(url);\n  }\n\n  public postProject(project: Project): Observable<Project> {\n    let url: string = `${this.baseUrl}${ApiPath.Project}`;\n    return this.http.post<Project>(url, project);\n  }\n  \n  public putProject(project: Project, id: number): Observable<Project> {\n    let url: string = `${this.baseUrl}${ApiPath.Project}/${id}`;\n    return this.http.put<Project>(url, project);\n  }\n\n  public deleteProject(id: number): Observable<any> {\n    let url: string = `${this.baseUrl}${ApiPath.Project}/${id}`;\n    return this.http.delete<any>(url);\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}